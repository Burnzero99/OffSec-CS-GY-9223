#from Crypto.PublicKey import RSA
import gmpy2
from gmpy2 import mpz
from Crypto.Util.number import *
from egcd import egcd

n = mpz


c = mpz
e=257

c2 = mpz
e2=65537

# Find x and y such that e*x + e2*y = 1 (Extended Euclidean)
# Both e values must be coprime (can verify with egcd if gcd is one)

gcd, x, y = egcd(e, e2)

# (c ** x) * (c2 ** y) = m mod n

# If y is negative
# (c ** x) *(inv(c2) ** -y) = m mod n

c2_inv = gmpy2.invert(c2, n)

m = (gmpy2.powmod(c,x,n) * gmpy2.powmod(c2_inv, y*(-1), n))%n

print(long_to_bytes(m))
